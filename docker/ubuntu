from ubuntu:latest

ARG MINIMAL
ARG COMPILER
ARG COVERAGE
ARG BUILD_TYPE

ARG TRAVIS
ARG TRAVIS_PULL_REQUEST
ARG TRAVIS_REPO_SLUG
ARG TRAVIS_BRANCH
ARG TRAVIS_COMMIT

# update and install necessary packages
RUN apt-get -q update -y
RUN apt-get install -y software-properties-common
RUN add-apt-repository -y ppa:ubuntu-toolchain-r/test
RUN apt-get -q update -y
RUN apt-get -qq install -y make cmake cmake-data git doxygen graphviz texlive-font-utils

RUN if [ ! ${MINIMAL} ]; then \
  apt-get -qq install -y libscotch-dev libexodusii-dev liblapacke-dev flex; \
fi

RUN case $(echo $COMPILER | tr '[:upper:]' '[:lower:]') in \
  gnu) apt-get -qq install -y g++-6 gfortran-6;; \
  clang) apt-get -qq install -y g++ clang gfortran; \
  *) echo "Compiler suite '$COMPILER' is unknown"; exit 1;; \
esac


RUN groupadd -r flecsale && useradd -r -m -g flecsale flecsale
USER flecsale

# install coverage util
WORKDIR /tmp
RUN if [ ${COVERAGE}  ]; then \
  apt-get -qq install -y python-pip; \
  pip install --user codecov; \
fi

# clone the repository
RUN git clone --recursive https://github.com/losalamos/flecsale.git

WORKDIR flecsale
RUN git fetch --tags
RUN if [ ${TRAVIS} = true ]; then \
  if [ ${TRAVIS_PULL_REQUEST} != false ]; then \
    git fetch "git://github.com/${TRAVIS_REPO_SLUG}" +refs/pull/"${TRAVIS_PULL_REQUEST}"/merge: ;\
    git checkout FETCH_HEAD; \
  else \
    git fetch --depth=10 "git://github.com/${TRAVIS_REPO_SLUG}" "${TRAVIS_BRANCH}"; \
	  git checkout "${TRAVIS_COMMIT}"; \
  fi; \
  git submodule update; \
fi

# make a build directory
RUN mkdir build
WORKDIR build


# run cmake
RUN \
case $(echo $COMPILER | tr '[:upper:]' '[:lower:]') in \
  gnu) \
    export CC=gcc-6; \
    export CXX=g++-6 \
    ;; \
  clang) \
    export CC=clang; \
    export CXX=clang++ \
    ;; \    
  *) \
    echo "Compiler suite '$COMPILER' is unknown"; \
    exit 1;; \
esac; \
if [ $(echo $BUILD_TYPE | tr '[:upper:]' '[:lower:]') = debug ]; then \
  export CXXFLAGS="-Werror"; \
fi; \
cmake -DCMAKE_BUILD_TYPE=${BUILD_TYPE} \
          -DENABLE_UNIT_TESTS=ON \
	        -DENABLE_DOXYGEN=ON \
          ${COVERAGE:+-DENABLE_COVERAGE_BUILD=ON} ..

RUN make VERBOSE=1
RUN ctest -V -R shock_box
RUN make test
RUN make doxygen flecsi.doxygen
RUN cd .. && if [ ${COVERAGE} ]; then $HOME/.local/bin/codecov; fi && cd -
RUN make install DESTDIR=${PWD}
USER root
RUN make install

